// Mocks generated by Mockito 5.3.2 from annotations
// in mahmud_flutter_restauran/test/dependency_bloc_test/dependency_restaurant_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mahmud_flutter_restauran/models/model.dart' as _i3;
import 'package:mahmud_flutter_restauran/repository/repository_impl/app_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantResponse_1 extends _i1.SmartFake
    implements _i3.RestaurantResponse {
  _FakeRestaurantResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestaurantDetailResponse_2 extends _i1.SmartFake
    implements _i3.RestaurantDetailResponse {
  _FakeRestaurantDetailResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRepositoryImpl extends _i1.Mock implements _i4.AppRepositoryImpl {
  MockAppRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);
  @override
  set client(_i2.Dio? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.RestaurantResponse> getRestaurantData() => (super.noSuchMethod(
        Invocation.method(
          #getRestaurantData,
          [],
        ),
        returnValue:
            _i5.Future<_i3.RestaurantResponse>.value(_FakeRestaurantResponse_1(
          this,
          Invocation.method(
            #getRestaurantData,
            [],
          ),
        )),
      ) as _i5.Future<_i3.RestaurantResponse>);
  @override
  _i5.Future<_i3.RestaurantDetailResponse> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRestaurant,
          [id],
        ),
        returnValue: _i5.Future<_i3.RestaurantDetailResponse>.value(
            _FakeRestaurantDetailResponse_2(
          this,
          Invocation.method(
            #getDetailRestaurant,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.RestaurantDetailResponse>);
  @override
  _i5.Future<_i3.RestaurantResponse> searchRestaurant(String? q) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [q],
        ),
        returnValue:
            _i5.Future<_i3.RestaurantResponse>.value(_FakeRestaurantResponse_1(
          this,
          Invocation.method(
            #searchRestaurant,
            [q],
          ),
        )),
      ) as _i5.Future<_i3.RestaurantResponse>);
  @override
  void setupDioClient() => super.noSuchMethod(
        Invocation.method(
          #setupDioClient,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
